{"author":"Benjamin J. Balter","title":"GitHub for Journalism — What WordPress Post Forking could do to Editorial Workflows\n","excerpt":null,"layout":"post","categories":["technology"],"tags":["code","collaboration","github","gsoc","journalism","open source","plugin","wordpress","workflow"],"post_format":[],"related_posts":[{"url":"/2010/09/12/wordpress-resume-plugin/","id":"/2010/09/12/wordpress-resume-plugin","title":"WordPress Resume Plugin"},{"url":"/2010/09/13/new-media-flak-megaphone-vs-cocktail-party/","id":"/2010/09/13/new-media-flak-megaphone-vs-cocktail-party","title":"New Media Flak: Megaphone vs. Cocktail Party"},{"url":"/2010/10/10/does-every-cloud-have-a-silver-lining/","id":"/2010/10/10/does-every-cloud-have-a-silver-lining","title":"Does Every Cloud Have a Silver Lining?"},{"url":"/2010/11/06/removing-the-barriers-to-organizational-agility/","id":"/2010/11/06/removing-the-barriers-to-organizational-agility","title":"Removing the Barriers to Organizational Agility\n"},{"url":"/2010/11/08/what-fourteen-century-apple-pie-teaches-us-about-sharing/","id":"/2010/11/08/what-fourteen-century-apple-pie-teaches-us-about-sharing","title":"What Fourteen-Century Apple Pie Teaches Us About Sharing\n"},{"url":"/2010/11/15/will-federal-contracting-officers-soon-have-their-heads-in-the-clouds/","id":"/2010/11/15/will-federal-contracting-officers-soon-have-their-heads-in-the-clouds","title":"Will Federal Contracting Officers Soon Have Their Heads in the Clouds?\n"},{"url":"/2010/11/29/free-trade-in-china-just-google-it/","id":"/2010/11/29/free-trade-in-china-just-google-it","title":"Free Trade in China? Just Google it."},{"url":"/2010/11/29/twitter-mentions-as-comments/","id":"/2010/11/29/twitter-mentions-as-comments","title":"Twitter Mentions as Comments WordPress Plugin\n"},{"url":"/2010/12/01/the-internet-is-series-of-tubes/","id":"/2010/12/01/the-internet-is-series-of-tubes","title":"The Internet is Series of Tubes (oh, and Tollgates too)\n"},{"url":"/2010/12/20/late-night-infomercials/","id":"/2010/12/20/late-night-infomercials","title":"Late-Night Infomercials: Guaranteed to Extend the 4th Amendment or Your Money Back"}],"url":"/2012/02/28/github-for-journalism-what-wordpress-post-forking-could-do-to-editorial-workflows/","date":"2012-02-28 00:00:00 -0500","id":"/2012/02/28/github-for-journalism-what-wordpress-post-forking-could-do-to-editorial-workflows","next":"/2012/03/02/php-is-insecure-and-other-enterprise-open-source-fud","previous":"/2012/02/27/open-source-alternatives-to-proprietary-enterprise-software","content":"<p>Wired Magazine recently took a turn for the meta. In addition to publishing <a href=\"http://www.wired.com/wiredenterprise/2012/02/github/all/1\">their recent story featuring the popular version control site GitHub</a> on Wired.com as they would normally, they also <a href=\"https://github.com/WiredEnterprise/Lord-of-the-Files\">published it on GitHub itself under a creative commons license</a>, allowing readers to fork and contribute to the story as they saw fit. In <a href=\"http://www.wired.com/wiredenterprise/2012/02/github-revisited/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+wired%2Findex+%28Wired%3A+Index+3+%28Top+Stories+2%29%29\">reflecting after the fact</a>, the Wired team said something that stood out to me:</p>\n\n<blockquote>\n<p>At Wired offices, you hear the question over and over again as we work on stories like the one you&#39;re reading now: &quot;Are you out of the story? I want to go in.&quot; We have a version control problem. We publish Wired.com on WordPress. It&#39;s a decent publishing tool, but when two people change a story at the same time, one of them doesn&#39;t get her changes onto the final story.</p>\n\n<p>We published our GitHub story on GitHub because it was meta-cool. But we also did it to see if GitHub might actually help us solve our problem.</p>\n</blockquote>\n\n<p>Spoiler alert: it didn&#39;t. GitHub&#39;s great for a lot of things, source code chief among them, but it&#39;s not for the faint of heart. There&#39;s a great deal of command line, and general geekery involved that raise the barriers to entry just high enough to keep it out of everyday newsrooms and editorial workflows. [^1]</p>\n\n<p><strong>The Pitch:</strong> <em>What if we could re-imagine WordPress&#39;s ease-of-use and intuitively dumb-simple workflow to introduce a layer of GitHub&#39;s collaborative fork-and-merge horsepower under the hood?</em></p>\n\n<p>Users would have the ability to &quot;clone&quot; an existing post, make any changes they want, and then merge those change back into the original before publishing.There are four distinct use cases where this feature may come into play:</p>\n\n<ul>\n<li>  Collaborative editing (by resolving two users&#39; conflicted saves  – Wired&#39;s example)</li>\n<li>  Saving draft changes of already-published content</li>\n<li>  Scheduling pending changes to already-published content</li>\n<li>  Allowing users without edit or publish capabilities to edit and submit changes to content (similar to GitHub&#39;s pull request system)</li>\n</ul>\n\n<p>I&#39;d imagine the workflow would go something like this:</p>\n\n<ol>\n<li> User without the ability to edit an existing post has changes to make</li>\n<li> User &quot;forks&quot; the post, making any change they deem necessary</li>\n<li> When done, user attempts to merge changes back into the original</li>\n<li> Post goes into standard WordPress &quot;pending review&quot; workflow</li>\n<li> Editor is presented with diff (using the built-in diff engine), and can automatically accept changes (if there are no conflicts), or manually merge the two if necessary</li>\n<li> Post is re-published with updated content, revision logs merged to reflect history</li>\n</ol>\n\n<p>In a nutshell:</p>\n\n<ul>\n<li>  Extends WordPress&#39;s existing revision system</li>\n<li>  Clone existing posts, edit, and &quot;republish&quot;</li>\n<li>  Schedule changes to posts, including taxonomies and metadata</li>\n<li>  Pending changes diff view, front-end preview of changes</li>\n<li>  Using WordPress&#39;s pending-review system, integrates with existing plugins for notifications, management, etc.</li>\n<li>  Ability to store &quot;commit messages&quot; with each post revision to explain to others what changes were made and why</li>\n<li>  Automatically merges (non-conflicted) changes (based on existing diff engine) \n\n<ol>\n<li> One sided changes – one overwrites the other</li>\n<li> Two sided non-conflict changes – automatically merge</li>\n<li> Conflicted changes – note conflicts in fork and prepare for re-merge</li>\n</ol></li>\n</ul>\n\n<p>Post forking may make for a killer plugin [^2] or piece of core functionality… and imagine if it could integrate with other collaboration tools like <a href=\"http://editflow.org/\">Edit Flow</a>, or <a href=\"http://ben.balter.com/2011/08/29/wp-document-revisions-document-management-version-control-wordpress/\">WP Document Revisions</a>? As in Wired&#39;s example, it has the potential to fundamentally change newsrooms and other editorial workflows. All of a sudden, any content becomes either publicly or privately collaborative. Pretty cool, huh? While it may be a bit ahead of it&#39;s time from a human standpoint, from a technical standpoint, the technology&#39;s there — it&#39;s nothing new — just a matter of building it, and hopefully solving the dreaded &quot;are you out yet?&quot; problem.</p>\n\n<p>Thoughts? Would you use this? What else would you like to see it do? <a href=\"http://ben.balter.com/contact/\">Drop me a line</a>, or let me know in the <a href=\"#comments\">comments below</a>?</p>\n\n<p>*<em>Update (3/5): *</em>The plan right now is to submit this as a <a href=\"http://ben.balter.com/tag/gsoc/\">Google Summer of Code</a> project, so if all goes well, look for the above-outlined functionality in a WordPress install near you towards the end of the summer. In the mean time, the continued thoughts/feedback is very greatly appreciated.</p>\n\n<p>*<em>Update (3/27): *</em>It looks like <a href=\"http://wpdevel.wordpress.com/2012/03/16/no-gsoc-2012/\">WordPress isn&#39;t participating in GSoC this year</a>. Filing this idea under &quot;someday&quot;.</p>\n\n<p>*<em>Update (6/13): *</em>Stay tuned. This may yet become a reality after all. ETA end of summer-ish.</p>\n\n<p>*<em>Update (10/1): *</em>Introducing <a href=\"http://postforking.wordpress.com/2012/10/01/introducing-post-forking-for-wordpress/\">Post Forking for WordPress</a> — a more collaborative approach to content curation:</p>\n\n<p>[^1]: Having recently given this a try — using GitHub to curate <a href=\"http://ben.balter.com/2012/02/27/open-source-alternatives-to-proprietary-enterprise-software/\">a collaboratively edited list of open-source alternatives to proprietary software</a> — I know first-hand how off-putting GitHub can be to non-technical users. </p>\n\n<p>[^2]: Full disclosure: two plugins, <a href=\"http://wordpress.org/extend/plugins/revisionary/\">Revisionary</a> and <a href=\"http://wordpress.org/extend/plugins/duplicate-post/\">Duplicate Post</a> exist, but they don&#39;t take the idea nearly as far as the above proposes, nor do they do it in &quot;the WordPress way&quot;. I&#39;d hope that even if the idea started as a plugin, it would eventually be incorporated as core functionality.</p>\n\n<p>[4]: Having recently given this a try — using GitHub to curate a collaboratively edited list of open-source alternatives to proprietary software — I know first-hand how off-putting GitHub can be to non-technical users.\n [5]: Full disclosure: two plugins, Revisionary and Duplicate Post exist, but they don&#39;t take the idea nearly as far as the above proposes, nor do they do it in &quot;the WordPress way&quot;. I&#39;d hope that even if the idea started as a plugin, it would eventually be incorporated as core functionality.</p>\n","path":"_posts/2012-02-28-github-for-journalism-what-wordpress-post-forking-could-do-to-editorial-workflows.md"}