// Generated by CoffeeScript 1.6.3
(function() {
  var GitHubSearch,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  GitHubSearch = (function() {
    GitHubSearch.prototype.server = "https://api.github.com";

    GitHubSearch.prototype.repo = "benbalter/benbalter.github.com";

    GitHubSearch.prototype.language = "markdown";

    GitHubSearch.prototype.results = "#github-search-results";

    function GitHubSearch() {
      this.renderResults = __bind(this.renderResults, this);
      this.success = __bind(this.success, this);
      var _this = this;
      $("#github-search-form").submit(function(e) {
        e.preventDefault();
        return _this.getResults($("#github-search-q").val());
      });
    }

    GitHubSearch.prototype.getResults = function(query) {
      this.query = query;
      return this.call();
    };

    GitHubSearch.prototype.q = function() {
      return "" + this.query + "+repo:" + this.repo + "+language:" + this.language;
    };

    GitHubSearch.prototype.url = function() {
      return "" + this.server + "/search/code?q=" + (this.q());
    };

    GitHubSearch.prototype.call = function() {
      return $.getJSON(this.url(), this.success).fail(this.fail);
    };

    GitHubSearch.prototype.success = function(data) {
      if (data.total_count === 0) {
        return this.$results.append("<li>No results found</li>");
      } else {
        return this.renderResults(data.items);
      }
    };

    GitHubSearch.prototype.fail = function(data) {
      return console.log(data);
    };

    GitHubSearch.prototype.renderResults = function(results) {
      var _this = this;
      return $.each(results, function(id, result) {
        var title, url;
        url = _this.resultUrl(result.path);
        title = _this.resultTitle(result.path);
        if ((title != null) && (url != null)) {
          return $(_this.results).append("<li><a href=\"" + url + "\">" + title + "</a></li>");
        }
      });
    };

    GitHubSearch.prototype.resultUrl = function(path) {
      if (this.getResult(path) != null) {
        return this.getResult(path).url;
      }
    };

    GitHubSearch.prototype.resultTitle = function(path) {
      if (this.getResult(path) != null) {
        return this.getResult(path).title;
      }
    };

    GitHubSearch.prototype.getResult = function(path) {
      return window.github_results_index[path];
    };

    return GitHubSearch;

  })();

  $(function() {
    return new GitHubSearch;
  });

}).call(this);
